---
services:
  reverse-proxy:
    image: traefik:v3.1.4
    container_name: traefik
    restart: unless-stopped
    command:
      # logging config (levels are TRACE, DEBUG, INFO, WARN, ERROR, FATAL, and PANIC)
      - --log.level=WARN
      #- --log.filepath=traefik.log
      #- --accesslog=true
      #- --accesslog.filepath=access.log
      # enable traefik dashboard
      - --api.dashboard=true
      - --api.insecure=true
      # for health checking
      - --ping=true
      # allow traefik to discover docker containers
      - --providers.docker=true
      - --providers.docker.network=proxy
      - --providers.docker.exposedbydefault=false
      # allow traefik to config via file
      - --providers.file.filename=config.yml
      # setup insecure listener that redirects all traffice to TLS
      - --entryPoints.web.address=:80
      - --entryPoints.web.http.redirections.entryPoint.to=websecure
      - --entryPoints.web.http.redirections.entryPoint.scheme=https
      - --entryPoints.websecure.address=:443
      # setup TLS config for websecure listener
      - --entrypoints.websecure.asDefault=true
      #- --entrypoints.websecure.tls=true
      - --entryPoints.websecure.http.tls.certResolver=cloudflare
      - --entryPoints.websecure.http.tls.domains[0].main=local.rwdevs.com
      - --entryPoints.websecure.http.tls.domains[0].sans=*.local.rwdevs.com
      - --serversTransport.insecureSkipVerify=true
      # setup LetsEncrypt
      - --certificatesresolvers.cloudflare.acme.dnschallenge=true
      - --certificatesresolvers.cloudflare.acme.dnschallenge.provider=cloudflare
      - --certificatesresolvers.cloudflare.acme.dnschallenge.resolvers=1.1.1.1:53
      - --certificatesresolvers.cloudflare.acme.dnschallenge.resolvers=1.0.0.1:53
      #- --certificatesresolvers.cloudflare.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
      - --certificatesresolvers.cloudflare.acme.caserver=https://acme-v02.api.letsencrypt.org/directory
      - --certificatesresolvers.cloudflare.acme.email=realworlddevs@outlook.com
      - --certificatesresolvers.cloudflare.acme.storage=/acme/acme.json
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    networks:
      - proxy
    environment:
      CF_DNS_API_TOKEN: ${CF_DNS_API_TOKEN}
      TRAEFIK_DASHBOARD_CREDENTIALS: ${TRAEFIK_DASHBOARD_CREDENTIALS}
    env_file: traefik.env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - CHANGE_TO_COMPOSE_DATA_PATH/traefik/config.yml:/config.yml
      #- CHANGE_TO_COMPOSE_DATA_PATH/traefik/access.log:/access.log
      #- CHANGE_TO_COMPOSE_DATA_PATH/traefik/traefik.log:/traefik.log
      - CHANGE_TO_COMPOSE_DATA_PATH/traefik/acme/acme.json:/acme/acme.json
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.rule=Host(`proxy.local.rwdevs.com`)
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.routers.traefik.middlewares=traefik-auth
      - traefik.http.middlewares.traefik-auth.basicauth.users=${TRAEFIK_DASHBOARD_CREDENTIALS}
    healthcheck:
      # Run traefik healthcheck command
      # https://doc.traefik.io/traefik/operations/cli/#healthcheck
      test: ["CMD", "traefik", "healthcheck", "--ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 5s
networks:
  proxy:
    name: proxy
    external: true
